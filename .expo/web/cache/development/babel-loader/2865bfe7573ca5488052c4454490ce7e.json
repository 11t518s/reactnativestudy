{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { theme } from \"./colors\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      working = _useState2[0],\n      setWorking = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toDos = _useState6[0],\n      setToDos = _useState6[1];\n\n  var travel = function travel() {\n    return setWorking(false);\n  };\n\n  var work = function work() {\n    return setWorking(true);\n  };\n\n  var addToDo = function addToDo() {\n    if (text === \"\") {\n      return;\n    }\n\n    setToDos(_objectSpread(_objectSpread({}, toDos), {}, _defineProperty({}, Date.now(), {\n      text: text,\n      work: working\n    })));\n    setText(\"\");\n  };\n\n  var _onChangeText = function onChangeText(e) {\n    setText(e);\n  };\n\n  console.log(Object.keys(toDos).map(function (key) {\n    return toDos;\n  }));\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Pressable, {\n        onPress: work,\n        children: _jsx(Text, {\n          style: styles.btnText,\n          children: \"Work\"\n        })\n      }), _jsx(Pressable, {\n        onPress: travel,\n        children: _jsx(Text, {\n          style: styles.btnText,\n          children: \"Travel\"\n        })\n      })]\n    }), _jsx(TextInput, {\n      onSubmitEditing: addToDo,\n      style: styles.input,\n      returnKeyType: \"done\",\n      placeholder: working ? \"add to do\" : \"where do you want to go\",\n      onChangeText: function onChangeText(e) {\n        return _onChangeText(e);\n      },\n      value: text\n    }), _jsx(ScrollView, {\n      children: Object.keys(toDos).map(function (key) {\n        return _jsx(View, {\n          style: styles.toDo\n        }, key);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n    color: \"white\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginTop: 20,\n    fontSize: 18\n  },\n  toDo: {},\n  toDoText: {}\n});","map":{"version":3,"sources":["/Users/bongsu/Desktop/reactnative/WorkHardTravelHardApp/App.tsx"],"names":["StatusBar","theme","useState","App","working","setWorking","text","setText","toDos","setToDos","travel","work","addToDo","Date","now","onChangeText","e","console","log","Object","keys","map","key","styles","container","header","btnText","input","toDo","StyleSheet","create","flex","backgroundColor","bg","paddingHorizontal","justifyContent","flexDirection","marginTop","fontSize","fontWeight","color","paddingVertical","borderRadius","toDoText"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Pressable,\n  TextInput,\n  ScrollView,\n} from \"react-native\";\nimport { theme } from \"./colors\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  const travel = () => setWorking(false);\n  const work = () => setWorking(true);\n  const addToDo = () => {\n    if (text === \"\") {\n      return;\n    }\n\n    setToDos({ ...toDos, [Date.now()]: { text, work: working } });\n    setText(\"\");\n  };\n\n  const onChangeText = (e: string) => {\n    setText(e);\n  };\n  console.log(Object.keys(toDos).map((key) => toDos));\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.header}>\n        <Pressable onPress={work}>\n          <Text style={styles.btnText}>Work</Text>\n        </Pressable>\n        <Pressable onPress={travel}>\n          <Text style={styles.btnText}>Travel</Text>\n        </Pressable>\n      </View>\n      <TextInput\n        onSubmitEditing={addToDo}\n        style={styles.input}\n        returnKeyType={\"done\"}\n        placeholder={working ? \"add to do\" : \"where do you want to go\"}\n        onChangeText={(e) => onChangeText(e)}\n        value={text}\n      />\n      <ScrollView>\n        {Object.keys(toDos).map((key) => (\n          <View key={key} style={styles.toDo}>\n            {/*<Text style={styles.toDoText}>{toDos.key.text}</Text>*/}\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginTop: 20,\n    fontSize: 18,\n  },\n  toDo: {},\n  toDoText: {},\n});\n"]},"metadata":{},"sourceType":"module"}